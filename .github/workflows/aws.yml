name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "AKIAU7VEHTFCDVOTCOPY"
          aws-secret-access-key: "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"
          aws-region: "us-east-2"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "342868072772.dkr.ecr.us-east-2.amazonaws.com"
          ECR_REPOSITORY: "app_repo"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update ECS task definition with new image
        env:
          ECS_CLUSTER: app_cluster
          ECS_SERVICE: app_service
          ECR_REGISTRY: "342868072772.dkr.ecr.us-east-2.amazonaws.com"
          IMAGE_TAG: latest
          TASK_ROLE_ARN: arn:aws:iam::342868072772:role/ecsTaskExecutionRole
          EXECUTION_ROLE_ARN: arn:aws:iam::342868072772:role/ecsTaskExecutionRole
          TASK_DEFINITION_FAMILY: app
        run: |
          aws ecs register-task-definition \
          --family $TASK_DEFINITION_FAMILY \
          --task-role-arn $TASK_ROLE_ARN \
          --execution-role-arn $EXECUTION_ROLE_ARN \
          --network-mode awsvpc \
          --container-definitions ="$(cat task_definition.json)" \
          --volumes ="$(cat volumes.json)" \
          --placement-constraints "$(cat placement_constraints.json)" \
          --requires-compatibilities FARGATE \
          --cpu 256 \
          --memory 512 \
          --tags key=value

      
